### scraping jstatsoft statistics
library(rvest)
library(magrittr)
library(stringr)
library(tm)
wd <- ("./data/jstatsoftStats")
dir.create(wd)
setwd(wd)
# construct list of urls
baseurl <- "http://www.jstatsoft.org/"
volurl <- paste0("v", seq(1,62,1))
volurl[1:9] <- paste0("v0", seq(1, 9, 1))
brurl <- paste0("b0", seq(1,9,1))
urls_list <- paste0(baseurl, volurl)
urls_list <- paste0(rep(urls_list, each = 9), "/", brurl)
names <- paste0(rep(volurl, each = 9), "_", brurl, ".html")
# download pages
folder <- "htmls_reviews"
dir.create(folder)
for (i in 1:length(urls_list)) {
if (!file.exists(names[i])) {
download.file(urls_list[i], destfile = paste0(folder, "/", names[i]))
Sys.sleep(runif(1, 0, 1))
}
}
# download pages
folder <- "htmls_reviews"
dir.create(folder)
for (i in 1:length(urls_list)) {
if (!file.exists(names[i])) {
download.file(urls_list[i], destfile = paste0(folder, "/", names[i]))
Sys.sleep(runif(1, 0, 1))
}
}
# download pages
folder <- "htmls_reviews"
dir.create(folder)
for (i in 1:length(urls_list)) {
if (!file.exists(paste0(folder, "/", names[i]))) {
download.file(urls_list[i], destfile = paste0(folder, "/", names[i]))
Sys.sleep(runif(1, 0, 1))
}
}
listFiles <- list.files("html_reviews", pattern = "v.*")
listFiles
listFiles <- list.files("./html_reviews", pattern = "v.*")
listFiles
?list.files
getwd()
listFiles <- list.files("./htmls_reviews", pattern = "v.*")
listFiles
listFiles <- list.files(folder, pattern = "v.*")
listFiles
# access pages
listFiles <- list.files(folder, pattern = "v.*")
url <- character()
volume <- character()
reviewer <- character()
title <- character()
reference <- character()
authors <- character()
publisher <- character()
year <- numeric()
isbn <- character()
numDownload <- numeric()
date <- character()
for (i in 1:length(listFiles)) {
htmlOut <- html(paste0(folder, listFiles[i], encoding = "utf8")
TableOut <- html_table(htmlOut)
if (length(TableOut) != 0) {
TableOut <- TableOut[[1]]
url[i] <- urls_list[i]
volume[i] <- names[i]
reviewer[i] <- TableOut[1,2]
#reference[i] <- TableOut[3,2]
authors[i] <- TableOut[5,2]
publisher[i] <- TableOut[7,2]
title[i] <- TableOut[6,2]
isbn[i] <- TableOut[8,2]
year[i] <- TableOut[9,2] %>% as.numeric
numDownload[i] <- TableOut[2,2] %>% str_extract(pattern = perl("(?<=\\()[[:digit:]]+")) %>% as.numeric
date[i] <- TableOut[3,2] %>% str_extract(pattern = "[[:digit:]]{4}-[[:digit:]]{2}-[[:digit:]]{2}$")
} else {
url[i] <- ""
volume[i] <- ""
reviewer[i] <- ""
#reference[i] <- ""
authors[i] <- ""
publisher[i] <- ""
title[i] <- ""
isbn[i] <- ""
year[i] <- NA
numDownload[i] <- NA
date[i] <- ""
}
}
# access pages
listFiles <- list.files(folder, pattern = "v.*")
url <- character()
volume <- character()
reviewer <- character()
title <- character()
reference <- character()
authors <- character()
publisher <- character()
year <- numeric()
isbn <- character()
numDownload <- numeric()
date <- character()
for (i in 1:length(listFiles)) {
htmlOut <- html(paste0(folder, listFiles[i]), encoding = "utf8")
TableOut <- html_table(htmlOut)
if (length(TableOut) != 0) {
TableOut <- TableOut[[1]]
url[i] <- urls_list[i]
volume[i] <- names[i]
reviewer[i] <- TableOut[1,2]
#reference[i] <- TableOut[3,2]
authors[i] <- TableOut[5,2]
publisher[i] <- TableOut[7,2]
title[i] <- TableOut[6,2]
isbn[i] <- TableOut[8,2]
year[i] <- TableOut[9,2] %>% as.numeric
numDownload[i] <- TableOut[2,2] %>% str_extract(pattern = perl("(?<=\\()[[:digit:]]+")) %>% as.numeric
date[i] <- TableOut[3,2] %>% str_extract(pattern = "[[:digit:]]{4}-[[:digit:]]{2}-[[:digit:]]{2}$")
} else {
url[i] <- ""
volume[i] <- ""
reviewer[i] <- ""
#reference[i] <- ""
authors[i] <- ""
publisher[i] <- ""
title[i] <- ""
isbn[i] <- ""
year[i] <- NA
numDownload[i] <- NA
date[i] <- ""
}
}
folder
folder <- "htmls_reviews/"
listFiles <- list.files(folder, pattern = "v.*")
listFiles
# download pages
folder <- "htmls_reviews/"
dir.create(folder)
for (i in 1:length(urls_list)) {
if (!file.exists(paste0(folder, names[i]))) {
download.file(urls_list[i], destfile = paste0(folder, "/", names[i]))
Sys.sleep(runif(1, 0, 1))
}
}
# access pages
listFiles <- list.files(folder, pattern = "v.*")
url <- character()
volume <- character()
reviewer <- character()
title <- character()
reference <- character()
authors <- character()
publisher <- character()
year <- numeric()
isbn <- character()
numDownload <- numeric()
date <- character()
for (i in 1:length(listFiles)) {
htmlOut <- html(paste0(folder, listFiles[i]), encoding = "utf8")
TableOut <- html_table(htmlOut)
if (length(TableOut) != 0) {
TableOut <- TableOut[[1]]
url[i] <- urls_list[i]
volume[i] <- names[i]
reviewer[i] <- TableOut[1,2]
#reference[i] <- TableOut[3,2]
authors[i] <- TableOut[5,2]
publisher[i] <- TableOut[7,2]
title[i] <- TableOut[6,2]
isbn[i] <- TableOut[8,2]
year[i] <- TableOut[9,2] %>% as.numeric
numDownload[i] <- TableOut[2,2] %>% str_extract(pattern = perl("(?<=\\()[[:digit:]]+")) %>% as.numeric
date[i] <- TableOut[3,2] %>% str_extract(pattern = "[[:digit:]]{4}-[[:digit:]]{2}-[[:digit:]]{2}$")
} else {
url[i] <- ""
volume[i] <- ""
reviewer[i] <- ""
#reference[i] <- ""
authors[i] <- ""
publisher[i] <- ""
title[i] <- ""
isbn[i] <- ""
year[i] <- NA
numDownload[i] <- NA
date[i] <- ""
}
}
# construct data frame
dat <- data.frame(url = url, volume = volume, reviewer = reviewer, authors = authors, publisher = publisher, title = title, isbn = isbn, year = year, numDownload = numDownload)
dat <- dat[dat$title!="",]
names(dat)
# manual approach
url <- "http://www.jstatsoft.org/v61/b01"
htmlOut <- html(url)
TableOut <- html_table(htmlOut)
TableOut <- TableOut[[1]]
TableOut[,1]
## data inspection
# publisher
dat$publisher <- as.character(dat$publisher)
sort(table(dat$publisher))
dat$publisher[str_detect(dat$publisher, "Wiley")] <- "Wiley"
dat$publisher[str_detect(dat$publisher, "Springer")] <- "Springer"
dat$publisher[str_detect(dat$publisher, "Chapman|CRC")] <- "Chapman Hall/CRC"
dat$publisher[str_detect(dat$publisher, "Reilly")] <- "O'Reilly"
dat$publisher[str_detect(dat$publisher, "Cambridge")] <- "Cambridge Univ. Press"
dat$publisher[str_detect(dat$publisher, "Manning")] <- "Manning"
dat$publisher[str_detect(dat$publisher, "World Scientific Publishing")] <- "World Scientific Publishing"
sort(table(dat$publisher))
# download statistics
dattop <- dat[order(dat$numDownload, decreasing = TRUE),]
dattop[1:10,]
summary(dat$numDownload)
hist(dat$numDownload, breaks=30)
plot(density(dat$numDownload), yaxt="n", ylab="", xlab="Number of downloads", main="Distribution of download statistics, book reviews")
# year
table(dat$year)
folder <- "pdfs_reviews/"
dir.create(folder)
urls <- paste0(dat$url, "/paper")
names <- str_sub(dat$volume, 1, -6)
for (i in 1:length(urls)) {
if (!file.exists(paste0(folder, names[i], ".pdf"))) {
download.file(urls[i], destfile = paste0("pdfs/", names[i], ".pdf"), mode = "wb")
}
}
pdftotext <- function(fname){
path_to_pdftotext <-
"C:/xpdf/pdftotext.exe"
fname_txt <- str_replace(fname, ".pdf", ".txt")
command <- str_c(path_to_pdftotext,
fname,
fname_txt, sep=" ")
shell(command)
}
pdfFiles <- list.files(folder pattern = ".+\\.pdf")
pdfFiles <- list.files(folder, pattern = ".+\\.pdf")
pdfFiles
txtFiles <- list.files(folder, pattern = ".+\\.txt$")
reviewsTxt <- character()
for (i in 1:length(txtFiles)) {
reviewsTxt[i] <- paste0(readLines(txtFiles[i]), collapse="")
}
txtFiles <- list.files(folder, pattern = ".+\\.txt$")
txtFiles
txtFiles <- list.files(folder, pattern = ".+\\.txt$")
reviewsTxt <- character()
for (i in 1:length(txtFiles)) {
reviewsTxt[i] <- paste0(readLines(paste0(folder, txtFiles[i])), collapse="")
}
#
warnings()
library(stringr)
example.obj <- "1. A small sentence. - 2. Another tiny sentence."
unlist(str_extract_all(example.obj, perl("(?<=2. ).+")))
unlist(str_extract_all(example.obj, perl(".+(?!=2. )")))
unlist(str_extract_all(example.obj, perl(".+(?!2. )")))
unlist(str_extract_all(example.obj, perl(".+?(?!2. )")))
unlist(str_extract_all(example.obj, perl("\\>.\\>(?!2. )
unlist(str_extract_all(example.obj, perl("\\>.\\>(?!2. )")))
unlist(str_extract_all(example.obj, perl("\\>.\\>(?!.)")))
unlist(str_extract_all(example.obj, perl("\\<.+\\>(?!.)")))
unlist(str_extract_all(example.obj, perl("\\<.+\\>")))
unlist(str_extract_all(example.obj, perl("\\<\\>")))
unlist(str_extract_all(example.obj, perl(".+(?!.)")))
unlist(str_extract_all(example.obj, perl(".+?(?!.)")))
unlist(str_extract_all(example.obj, perl("?.+(?!.)")))
unlist(str_extract_all(example.obj, perl(".+(?!\\.)")))
unlist(str_extract_all(example.obj, perl(".+(?!\.)")))
unlist(str_extract_all(example.obj, perl("(?!\\.)")))
unlist(str_extract_all(example.obj, perl("(?!\\.).+")))
unlist(str_extract_all(example.obj, perl(".+(?<!\\.)")))
unlist(str_extract_all(example.obj, perl(".+?(?<!\\.)")))
unlist(str_extract_all(example.obj, perl("(.+)?(?<!\\.)")))
unlist(str_extract_all(example.obj, perl(".+(?<!2)")))
unlist(str_extract_all(example.obj, perl(".+(?<=2)")))
unlist(str_extract_all(example.obj, perl(".+(?=2)")))
